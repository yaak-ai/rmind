[project]
name = "rmind"
version = "0.1.0"
description = "Foundation models for spatial intelligence"
readme = "README.md"
requires-python = ">=3.12, <3.13"
license = { text = "Apache-2.0" }
authors = [{ name = "ML yaak team", email = "ml@yaak.ai" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
  "einops>=0.8.1",
  "hydra-core>=1.3.2",
  "more-itertools>=10.4.0",
  "numpy>2.3.0",
  "omegaconf>=2.3.0",
  "orjson>=3.10.12",
  "polars>=1.32.2",
  "pydantic>=2.11.4",
  "pytorch-lightning>=2.5.2",
  "rbyte[geo,jpeg,yaak]==0.31.0",
  "structlog>=25.2.0",
  "tensordict-nightly==2025.9.24", # rbyte dep
  "timm>=1.0.20",
  "torch>=2.8.0",
  "torchaudio==2.8.0",
  "torchvision==0.23.0",
]

[project.urls]
repo = "https://github.com/yaak-ai/rmind"

[project.scripts]
rmind-export-onnx = "rmind.scripts.export_onnx:main"
rmind-predict = "rmind.scripts.predict:main"
rmind-train = "rmind.scripts.train:main"

[project.optional-dependencies]
predict = ["funcy>=2.0", "wandb>=0.21.0", "rbyte[visualize]"]
test = ["pytest>=8.4.1", "pytest-lazy-fixtures>=1.1.4"]
train = [
  "contextily>=1.6.2",
  "matplotlib>=3.10.3",
  "torchmetrics>=1.4.1",
  "wandb>=0.21.0",
]

[dependency-groups]
dev = [
  "deptry>=0.23.1",
  "ipython",
  "lovely-tensors",
  "pudb",
  "wat-inspector",
]
export = [
  "onnx>=1.19.1",
  "onnxruntime>=1.23.1",
  "onnxscript>=0.5.3",
]
test = [
  "pytest>=8.4.1",
  "pytest-lazy-fixtures>=1.1.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.basedpyright]
typeCheckingMode = "all"
enableTypeIgnoreComments = true
reportMissingTypeStubs = "none"
reportAny = "none"
reportExplicitAny = "none"
reportIgnoreCommentWithoutRule = "error"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
venvPath = "."
venv = ".venv"
include = ["src/"]
pythonVersion = "3.12"

[tool.deptry.per_rule_ignores]
DEP001 = ["rmind"]
DEP002 = [
  "funcy",
  "torchmetrics",
  "pytest",
  "pytest-lazy-fixtures",
]
DEP003 = ["rmind"]

[tool.deptry.package_module_name_map]
hydra-core = "hydra"
tensordict-nightly = "tensordict"
pytorch-lightning = [
  "pytorch_lightning",
  "lightning_fabric",
  "lightning_utilities",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
preview = true
fix = true
unsafe-fixes = true

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = [
  "A001",
  "A002",
  "ANN401",
  "COM812",
  "CPY",
  "D",
  "DOC201",
  "E501",
  "N812",
  "PD",
  "TD",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = ["S101"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.format]
preview = true
skip-magic-trailing-comma = true
