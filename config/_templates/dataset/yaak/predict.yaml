#@yaml/text-templated-strings

#@ drives = [
#@     'Niro096-HQ/2023-01-11--13-47-36',
#@     'Niro101-HQ/2022-12-25--09-58-33',
#@     'Niro101-HQ/2022-12-30--09-23-51',
#@     'Niro101-HQ/2022-12-31--09-57-24',
#@     'Niro101-HQ/2023-01-01--09-31-43',
#@     'Niro115-HQ/2023-05-16--10-47-33',
#@     'Niro104-HQ/2022-12-20--13-57-20',
#@     'Niro107-HQ/2023-05-12--12-05-15',
#@     'Niro122-HQ/2023-04-05--12-06-39',
#@     'Niro102-HQ/2022-12-03--11-30-20',
#@     'G1-00428/2024-04-23--07-00-31',
#@     'Niro104-HQ/2023-04-27--08-23-53',
#@     'G1-00429/2024-04-22--13-35-09',
#@     'G1-00436/2024-04-22--07-48-38',
#@     'G1-00436/2024-04-22--15-59-18'
#@ ]

#@ cameras = [
#@     'cam_front_left',
#@ ]
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for input_id in drives:
  (@=input_id@):
    #@ for camera in cameras:
    (@=camera@):
      index_column: "meta/ImageMetadata.(@=camera@)/frame_idx"
      source:
        _target_: rbyte.io.PathTensorSource
        path: "${paths.data}/(@=input_id@)/frames/(@=camera@).pii.mp4/576x324/{:09d}.jpg"
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
    #@ end
  #@ end

samples:
  inputs:
    #@ for input_id in drives:
    (@=input_id@):
      yaak_metadata_path: ${paths.data}/(@=input_id@)/metadata.log
      waypoints_path: ${paths.data}/(@=input_id@)/waypoints.json
      #@ for camera in cameras:
      (@=camera@)_path: ${paths.data}/(@=input_id@)/frames/(@=camera@).pii.mp4/576x324
      #@ end
    #@ end

  executor:
    _target_: concurrent.futures.ProcessPoolExecutor
    mp_context:
      _target_: multiprocessing.get_context
      method: forkserver

  storage: shared_memory_dict
  scheduling_strategy: eager
  persist_memory: false

  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    cache_type: disk
    cache_kwargs:
      cache_dir: ${paths.rbyte.cache}
    functions:
      - _target_: pipefunc.PipeFunc
        renames:
          path: yaak_metadata_path
        output_name: meta
        mapspec: "yaak_metadata_path[i] -> meta[i]"
        cache: true
        func:
          _target_: rbyte.io.YaakMetadataDataFrameBuilder
          fields:
            rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us

              frame_idx:
                _target_: polars.Int32

              camera_name:
                _target_: polars.Enum
                categories:
                  - cam_front_center
                  - cam_front_left
                  - cam_front_right
                  - cam_left_forward
                  - cam_right_forward
                  - cam_left_backward
                  - cam_right_backward
                  - cam_rear

            rbyte.io.yaak.proto.can_pb2.VehicleState:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us

              turn_signal:
                _target_: polars.Int8

            rbyte.io.yaak.proto.can_pb2.VehicleMotion:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us

              speed:
                _target_: polars.Float32

              gas_pedal_normalized:
                _target_: polars.Float32

              brake_pedal_normalized:
                _target_: polars.Float32

              steering_angle_normalized:
                _target_: polars.Float32

              gear:
                _target_: polars.Enum
                categories: ["0", "1", "2", "3"]
                
            rbyte.io.yaak.proto.sensor_pb2.Gnss:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us
              latitude:
                _target_: polars.Float32
              longitude:
                _target_: polars.Float32
                
      - _target_: pipefunc.PipeFunc
        renames:
          path: waypoints_path
        output_name: waypoints_raw
        mapspec: "waypoints_path[i] -> waypoints_raw[i]"
        func:
          _target_: rbyte.io.DuckDbDataFrameBuilder
        bound:
          query: |
            LOAD spatial;
            SELECT TO_TIMESTAMP(timestamp)::TIMESTAMP as timestamp,
                   heading,
                   ST_AsWKB(ST_Transform(geom, 'EPSG:4326', 'EPSG:3857')) AS geometry
            FROM ST_Read('{path}')

      - _target_: pipefunc.PipeFunc
        renames:
          input: waypoints_raw
        output_name: waypoints
        mapspec: "waypoints_raw[i] -> waypoints[i]"
        func:
          _target_: rbyte.io.WaypointBuilder
          length: 10
          columns:
            points: geometry
            output: waypoints

      - _target_: pipefunc.PipeFunc
        output_name: data
        mapspec: "meta[i], waypoints[i] -> data[i]"
        func:
          _target_: pipefunc.helpers.collect_kwargs
          parameters: [meta, waypoints]

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: aligned
        mapspec: "data[i] -> aligned[i]"
        func:
          _target_: rbyte.io.DataFrameAligner
          separator: /
          fields:
            meta:
              ImageMetadata.(@=cameras[0]@):
                key: time_stamp

              #@ for camera in cameras[1:]:
              ImageMetadata.(@=camera@):
                key: time_stamp
                columns:
                  frame_idx:
                    method: asof
                    tolerance: 10ms
                    strategy: nearest
              #@ end

              VehicleState:
                key: time_stamp
                columns:
                  turn_signal:
                    method: asof
                    tolerance: 100ms

              VehicleMotion:
                key: time_stamp
                columns:
                  speed:
                    method: interp
                  gas_pedal_normalized:
                    method: interp
                  brake_pedal_normalized:
                    method: interp
                  steering_angle_normalized:
                    method: interp
                  gear:
                    method: asof
                    tolerance: 100ms
                    strategy: nearest

              Gnss:
                key: time_stamp
                columns:
                  latitude:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest
                  longitude:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest

            waypoints:
              key: timestamp
              columns:
                heading:
                  method: asof
                  strategy: nearest

                waypoints:
                  method: asof
                  strategy: nearest

      #@ for camera in cameras:
      - _target_: pipefunc.PipeFunc
        renames:
          path: (@=camera@)_path
        output_name: (@=camera@)_meta
        mapspec: "(@=camera@)_path[i] -> (@=camera@)_meta[i]"
        cache: true
        func:
          _target_: rbyte.io.PathDataFrameBuilder
          pattern: (?<frame_idx>\d+).jpg
          fields:
            frame_idx:
              _target_: polars.Int32
      #@ end

      - _target_: pipefunc.PipeFunc
        output_name: query_context
        mapspec: #@ ", ".join(["aligned[i]"] + ["{}_meta[i]".format(camera) for camera in cameras]) + " -> query_context[i]"
        func:
          _target_: pipefunc.helpers.collect_kwargs
          parameters: #@ ["aligned"] + ["{}_meta".format(camera) for camera in cameras]

      - _target_: pipefunc.PipeFunc
        renames:
          context: query_context
        output_name: filtered
        mapspec: "query_context[i] -> filtered[i]"
        func:
          _target_: rbyte.io.DataFrameDuckDbQuery
        bound:
          query: |
            LOAD spatial;
            SELECT 
              * EXCLUDE "meta/VehicleMotion/gear",
              ST_AsWKB(ST_Transform(ST_Point("meta/Gnss/longitude", "meta/Gnss/latitude"), 'EPSG:4326', 'EPSG:3857')) as "meta/Gnss/longitude_latitude"
            FROM aligned
              SEMI JOIN cam_front_left_meta
                ON aligned."meta/ImageMetadata.cam_front_left/frame_idx" = cam_front_left_meta.frame_idx

            WHERE COLUMNS(*) IS NOT NULL
              AND aligned."meta/VehicleMotion/gear" == '3'
              AND aligned."meta/VehicleMotion/speed" BETWEEN 0.0 AND 130.0
              AND aligned."meta/VehicleMotion/gas_pedal_normalized" BETWEEN 0.0 AND 1.0
              AND aligned."meta/VehicleMotion/brake_pedal_normalized" BETWEEN 0.0 AND 1.0
              AND aligned."meta/VehicleMotion/steering_angle_normalized" BETWEEN -1.0 AND 1.0

      - _target_: pipefunc.PipeFunc
        renames:
          input: filtered
        output_name: with_waypoints_normalized
        mapspec: "filtered[i] -> with_waypoints_normalized[i]"
        func:
          _target_: rbyte.io.WaypointNormalizer
          columns:
            ego: meta/Gnss/longitude_latitude
            waypoints: waypoints/waypoints
            heading: waypoints/heading
            output: waypoints/waypoints_normalized

      - _target_: pipefunc.PipeFunc
        renames:
          input: with_waypoints_normalized
        output_name: samples
        mapspec: "with_waypoints_normalized[i] -> samples[i]"
        func:
          _target_: rbyte.io.DataFrameGroupByDynamic
          index_column: meta/ImageMetadata.(@=cameras[0]@)/frame_idx
          every: 10i
          period: 240i
          closed: left
          gather_every: 10

      - _target_: pipefunc.PipeFunc
        renames:
          df: samples
        output_name: samples_cast
        mapspec: "samples[i] -> samples_cast[i]"
        func:
          _target_: rbyte.io.DataFrameDuckDbQuery
        bound:
          query: |
            SELECT 
                "meta/ImageMetadata.cam_front_left/time_stamp"::TIMESTAMP[24] AS "meta/ImageMetadata.cam_front_left/time_stamp",
                "meta/ImageMetadata.cam_front_left/frame_idx"::INT32[24] AS "meta/ImageMetadata.cam_front_left/frame_idx",
                "meta/VehicleMotion/speed"::FLOAT[24] AS "meta/VehicleMotion/speed",
                "meta/VehicleMotion/gas_pedal_normalized"::FLOAT[24] AS "meta/VehicleMotion/gas_pedal_normalized",
                "meta/VehicleMotion/brake_pedal_normalized"::FLOAT[24] AS "meta/VehicleMotion/brake_pedal_normalized",
                "meta/VehicleMotion/steering_angle_normalized"::FLOAT[24] AS "meta/VehicleMotion/steering_angle_normalized",
                "meta/VehicleState/turn_signal"::INT8[24] AS "meta/VehicleState/turn_signal",
                "waypoints/waypoints_normalized"::FLOAT[2][10][24] AS "waypoints/waypoints_normalized"
            FROM 
                df
            WHERE 
                len("meta/ImageMetadata.cam_front_left/frame_idx") == 24 
                AND NOT (
                    list_max("meta/VehicleMotion/gas_pedal_normalized") <= (1.0 / 255 + 0.001) AND
                    list_max("meta/VehicleMotion/brake_pedal_normalized") <= (1.0 / 164 + 0.001) AND
                    list_max("meta/VehicleMotion/speed") >= 25.0 AND
                    list_last("meta/VehicleMotion/speed") - list_first("meta/VehicleMotion/speed") >= -0.05 * list_avg("meta/VehicleMotion/speed")
                )