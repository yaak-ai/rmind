#@yaml/text-templated-strings

#@ drives = [
#@    'Niro102-HQ/2022-11-24--13-04-51',
#@    'Niro111-HQ/2023-05-02--12-47-16',
#@    'Niro115-HQ/2023-04-10--08-43-17',
#@    'Niro102-HQ/2023-05-23--07-16-38',
#@    'Niro102-HQ/2023-05-19--15-31-45',
#@    'Niro110-HQ/2023-03-27--10-31-22',
#@    'Niro106-HQ/2023-03-18--12-32-49',
#@    'Niro102-HQ/2022-12-06--11-44-12',
#@    'Niro102-HQ/2022-12-02--11-39-37',
#@    'Niro102-HQ/2023-05-25--05-30-08',
#@    'Niro111-HQ/2023-05-26--08-52-20',
#@    'Niro101-HQ/2023-05-09--12-24-00',
#@    'Niro111-HQ/2023-05-24--15-34-53',
#@    'Niro122-HQ/2023-06-01--11-05-10',
#@    'Niro111-HQ/2023-05-25--16-28-25',
#@    'Niro104-HQ/2023-01-13--11-58-52',
#@    'Niro111-HQ/2023-05-11--10-09-15',
#@    'Niro132-HQ/2023-06-06--15-21-37',
#@    'Niro104-HQ/2022-12-25--10-23-53',
#@    'Niro111-HQ/2023-05-23--05-04-00',
#@    'Niro111-HQ/2023-03-23--10-15-45',
#@    'Niro111-HQ/2023-05-26--05-22-55',
#@    'Niro111-HQ/2023-05-19--14-13-00',
#@    'Niro115-HQ/2023-04-10--08-16-23',
#@    'Niro129-HQ/2023-04-13--11-57-08',
#@    'Niro108-HQ/2023-05-19--16-21-08',
#@    'Niro101-HQ/2022-12-30--09-23-51',
#@    'Niro115-HQ/2023-06-03--11-17-08',
#@    'Niro102-HQ/2022-11-25--11-53-38',
#@    'Niro111-HQ/2023-05-30--05-16-28',
#@    'Niro122-HQ/2023-05-25--14-11-51',
#@    'Niro111-HQ/2023-03-21--11-10-37',
#@    'Niro115-HQ/2023-04-09--11-38-06',
#@    'Niro107-HQ/2023-05-22--10-16-59',
#@    'Niro128-HQ/2023-05-23--16-14-17',
#@    'Niro107-HQ/2023-05-27--13-37-25',
#@    'Niro132-HQ/2023-05-30--16-56-08',
#@    'Niro102-HQ/2023-06-05--13-59-42',
#@    'Niro104-HQ/2022-12-28--14-40-53',
#@    'Niro104-HQ/2023-01-02--08-57-26',
#@    'Niro131-HQ/2023-05-12--08-32-39',
#@    'Niro111-HQ/2023-05-25--13-54-42',
#@    'Niro102-HQ/2022-12-22--13-30-14',
#@    'Niro127-HQ/2023-04-15--09-42-02',
#@    'Niro111-HQ/2023-05-16--05-37-55',
#@    'Niro103-HQ/2023-03-28--08-36-23',
#@    'Niro111-HQ/2023-04-22--11-09-08',
#@    'Niro111-HQ/2023-04-13--11-47-04',
#@    'Niro109-HQ/2023-05-30--07-21-03',
#@    'Niro102-HQ/2022-12-20--09-30-06',
#@    'Niro128-HQ/2023-05-23--12-13-59',
#@    'Niro104-HQ/2023-04-12--06-31-27',
#@    'Niro113-HQ/2023-06-03--16-58-19',
#@    'Niro111-HQ/2023-05-20--16-37-01',
#@    'Niro109-HQ/2023-06-05--18-09-54',
#@    'Niro102-HQ/2022-12-05--12-08-39',
#@    'Niro111-HQ/2023-03-16--10-55-01',
#@    'Niro111-HQ/2023-04-26--07-01-08',
#@    'Niro129-HQ/2023-04-13--11-45-36',
#@    'Niro102-HQ/2023-04-20--09-14-13',
#@    'Niro115-HQ/2023-05-25--05-08-41',
#@    'Niro103-HQ/2023-03-28--09-40-21',
#@    'Niro104-HQ/2022-12-30--13-16-22',
#@    'Niro111-HQ/2023-05-25--05-20-59',
#@    'Niro111-HQ/2023-05-26--08-27-58',
#@    'Niro113-HQ/2023-06-03--13-05-58',
#@    'Niro102-HQ/2023-01-23--13-13-49',
#@    'Niro122-HQ/2023-03-27--10-46-50',
#@    'Niro128-HQ/2023-05-17--13-40-34',
#@    'Niro131-HQ/2023-05-22--11-49-35',
#@    'Niro104-HQ/2023-05-31--07-59-03',
#@    'Niro127-HQ/2023-05-09--05-45-47',
#@    'Niro115-HQ/2023-05-31--07-53-49',
#@    'Niro115-HQ/2023-05-31--09-32-46',
#@    'Niro101-HQ/2023-06-07--07-52-20',
#@    'Niro104-HQ/2023-03-15--10-02-09',
#@    'Niro111-HQ/2023-05-21--13-13-04',
#@    'Niro115-HQ/2023-05-26--04-47-30',
#@    'Niro111-HQ/2023-05-25--15-11-58',
#@    'Niro104-HQ/2023-04-09--13-48-18',
#@    'Niro107-HQ/2023-01-19--12-38-20',
#@    'Niro104-HQ/2023-05-24--18-04-27',
#@    'Niro109-HQ/2023-05-31--17-52-51',
#@    'Niro104-HQ/2022-12-30--10-36-29',
#@    'Niro111-HQ/2023-04-17--13-20-08',
#@    'Niro101-HQ/2023-05-09--10-43-12',
#@    'Niro107-HQ/2023-05-27--14-36-00',
#@    'Niro104-HQ/2023-03-30--14-19-30',
#@    'Niro103-HQ/2023-06-01--10-33-02',
#@    'Niro107-HQ/2023-05-27--10-11-58',
#@    'Niro121-HQ/2023-04-22--08-21-48',
#@    'Niro116-HQ/2023-04-26--12-12-54',
#@    'Niro107-HQ/2023-05-11--12-08-09',
#@    'Niro104-HQ/2023-04-01--12-43-53',
#@    'Niro102-HQ/2023-01-21--10-02-00',
#@    'Niro115-HQ/2023-05-17--13-34-53',
#@    'Niro104-HQ/2022-12-28--11-18-47',
#@    'Niro112-HQ/2023-03-15--14-15-19',
#@    'Niro128-HQ/2023-05-31--09-49-56',
#@    'Niro122-HQ/2023-05-25--18-05-31',
#@ ]

---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for drive_id in drives:
  (@=drive_id@):
    cam_front_left:
      index_column: "meta/ImageMetadata.cam_front_left/frame_idx"
      source:
        _target_: rbyte.io.PathTensorSource
        path: "${paths.data}/(@=drive_id@)/frames/cam_front_left.pii.mp4/576x324/{:09d}.jpg"
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
  #@ end

samples:
  inputs:
    #@ for drive_id in drives:
    - input_id: (@=drive_id@)
      yaak_metadata_path: ${paths.data}/(@=drive_id@)/metadata.log
      osm_path: ${paths.data}/(@=drive_id@)/osm.mcap
      waypoints_path: ${paths.data}/(@=drive_id@)/waypoints.json
      cam_front_left_path: ${paths.data}/(@=drive_id@)/frames/cam_front_left.pii.mp4/576x324
    #@ end

  executor:
    _target_: concurrent.futures.ProcessPoolExecutor
    mp_context:
      _target_: multiprocessing.get_context
      method: forkserver

  storage: file_array
  run_folder: "${hydra:run.dir}/dataset/yaak/train/samples"
  scheduling_strategy: eager
  return_results: false
  persist_memory: false

  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    cache_type: disk
    cache_kwargs:
      cache_dir: ${paths.rbyte.cache}
    functions:
      - _target_: pipefunc.PipeFunc
        renames:
          path: yaak_metadata_path
        output_name: meta
        mapspec: "yaak_metadata_path[i] -> meta[i]"
        cache: true
        func:
          _target_: rbyte.io.YaakMetadataDataFrameBuilder
          fields:
            rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us
              frame_idx:
                _target_: polars.Int32
              camera_name:
                _target_: polars.Enum
                categories:
                  - cam_front_center
                  - cam_front_left
                  - cam_front_right
                  - cam_left_forward
                  - cam_right_forward
                  - cam_left_backward
                  - cam_right_backward
                  - cam_rear

            rbyte.io.yaak.proto.can_pb2.VehicleState:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us
              turn_signal:
                _target_: polars.Int8

            rbyte.io.yaak.proto.can_pb2.VehicleMotion:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us
              speed:
                _target_: polars.Float32
              gas_pedal_normalized:
                _target_: polars.Float32
              brake_pedal_normalized:
                _target_: polars.Float32
              steering_angle_normalized:
                _target_: polars.Float32
              gear:
                _target_: polars.Enum
                categories: ["0", "1", "2", "3"]

            rbyte.io.yaak.proto.sensor_pb2.Gnss:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us
              latitude:
                _target_: polars.Float32
              longitude:
                _target_: polars.Float32

      - _target_: pipefunc.PipeFunc
        renames:
          path: waypoints_path
        output_name: waypoints_raw
        mapspec: "waypoints_path[i] -> waypoints_raw[i]"
        func:
          _target_: rbyte.io.DuckDbDataFrameBuilder
        bound:
          query: |
            LOAD spatial;
            SET TimeZone = 'UTC';
            SELECT TO_TIMESTAMP(timestamp)::TIMESTAMP AS timestamp,
                   heading,
                   ST_AsWKB(ST_Transform(geom, 'EPSG:4326', 'EPSG:25832', always_xy := true)) AS geometry
            FROM ST_Read('{path}')

      - _target_: pipefunc.PipeFunc
        renames:
          input: waypoints_raw
        output_name: waypoints
        mapspec: "waypoints_raw[i] -> waypoints[i]"
        func:
          _target_: rbyte.io.WaypointBuilder
          length: 10
          columns:
            points: geometry
            output: xy
        
      - _target_: pipefunc.PipeFunc
        renames:
          path: osm_path
        output_name: osm
        mapspec: "osm_path[i] -> osm[i]"
        func:
          _target_: rbyte.io.McapDataFrameBuilder
          decoder_factories: [rbyte.io.ProtobufMcapDecoderFactory]
          fields:
            osm/Way:
              start: #timestamp
                _target_: polars.Datetime
                time_unit: us
              highway:
                _target_: polars.Int32

      - _target_: pipefunc.PipeFunc
        output_name: aligned
        mapspec: "meta[i], waypoints[i], osm[i] -> aligned[i]"
        func:
          _target_: makefun.create_function
          func_signature: "align(*, meta, waypoints, osm)"
          func_impl:
            _target_: rbyte.io.DataFrameAligner
            separator: /
            fields:
              meta:
                ImageMetadata.cam_front_left:
                  key: time_stamp

                VehicleState:
                  key: time_stamp
                  columns:
                    turn_signal:
                      method: asof
                      tolerance: 100ms

                VehicleMotion:
                  key: time_stamp
                  columns:
                    speed:
                      method: interp
                    gas_pedal_normalized:
                      method: interp
                    brake_pedal_normalized:
                      method: interp
                    steering_angle_normalized:
                      method: interp
                    gear:
                      method: asof
                      tolerance: 100ms
                      strategy: nearest

                Gnss:
                  key: time_stamp
                  columns:
                    latitude:
                      method: asof
                      tolerance: 500ms
                      strategy: nearest
                    longitude:
                      method: asof
                      tolerance: 500ms
                      strategy: nearest

              waypoints:
                key: timestamp
                columns:
                  heading:
                    method: asof
                    strategy: nearest
                  xy:
                    method: asof
                    strategy: nearest

              osm:
                osm/Way:
                  key: start
                  columns:
                    highway:
                      method: asof
                      strategy: backward

      - _target_: pipefunc.PipeFunc
        renames:
          path: cam_front_left_path
        output_name: cam_front_left_meta
        mapspec: "cam_front_left_path[i] -> cam_front_left_meta[i]"
        cache: true
        func:
          _target_: rbyte.io.PathDataFrameBuilder
          pattern: (?<frame_idx>\d+).jpg
          fields:
            frame_idx:
              _target_: polars.Int32


      - _target_: pipefunc.PipeFunc
        output_name: filtered
        mapspec: "aligned[i], cam_front_left_meta[i] -> filtered[i]"
        func:
          _target_: makefun.create_function
          func_signature: "df_query(*, query, aligned, cam_front_left_meta)"
          func_impl:
            _target_: rbyte.io.DataFrameDuckDbQuery
        bound:
          query: |
            LOAD spatial;
            WITH
              base_data AS (
                SELECT
                  *,
                  ST_Transform(
                    ST_Point("meta/Gnss/longitude", "meta/Gnss/latitude"),
                    'EPSG:4326', 'EPSG:25832', always_xy := true
                  ) AS ego_geom,
                  ST_GeomFromWKB("waypoints/xy") AS waypoints_geom
                FROM
                  aligned
                  SEMI JOIN cam_front_left_meta
                  ON aligned."meta/ImageMetadata.cam_front_left/frame_idx"
                  = cam_front_left_meta.frame_idx
                WHERE
                  aligned."meta/VehicleMotion/gear" == '3'
                  AND aligned."meta/VehicleMotion/speed" BETWEEN 0.0 AND 130.0
                  AND aligned."meta/VehicleMotion/gas_pedal_normalized" BETWEEN 0.0 AND 1.0
                  AND aligned."meta/VehicleMotion/brake_pedal_normalized" BETWEEN 0.0 AND 1.0
                  AND aligned."meta/VehicleMotion/steering_angle_normalized" BETWEEN -1.0 AND 1.0
                  AND aligned."osm/osm/Way/highway" NOT IN (0, 1, 2, 6, 7, 8)
                  AND COLUMNS(*) IS NOT NULL
              ),
              normalized_geometries AS (
                SELECT
                  *,
                  ST_Rotate(
                    ST_Translate(
                      waypoints_geom,
                      - ST_X(ego_geom),
                      - ST_Y(ego_geom)
                    ),
                    radians("waypoints/heading")
                  ) AS normalized_waypoints_geom
                FROM
                  base_data
              )
            SELECT
              * EXCLUDE (
                "meta/VehicleMotion/gear",
                waypoints_geom,
                normalized_waypoints_geom,
                ego_geom,
                "waypoints/xy",
                "waypoints/heading"
              ),
              [
                ST_X(ego_geom),
                ST_Y(ego_geom)
              ] AS "meta/Gnss/xy",
                (
                SELECT
                  list(
                    [ST_X(p.point_struct.geom), ST_Y(p.point_struct.geom)]
                    ORDER BY
                      p.point_struct.path
                  )
                FROM
                  UNNEST(ST_Dump(waypoints_geom)) AS p(point_struct)
              ) AS "waypoints/xy",
              (
                SELECT
                  list(
                    [ST_X(p.point_struct.geom), ST_Y(p.point_struct.geom)]
                    ORDER BY
                      p.point_struct.path
                  )
                FROM
                  UNNEST(ST_Dump(normalized_waypoints_geom)) AS p(point_struct)
              ) AS "waypoints/xy_normalized"
            FROM
              normalized_geometries
            WHERE
              ST_Contains(
                ST_MakeEnvelope(-150, -150, 150, 150),
                normalized_waypoints_geom
              )
            ORDER BY
              "meta/ImageMetadata.cam_front_left/time_stamp";

      - _target_: pipefunc.PipeFunc
        renames:
          input: filtered
        output_name: samples
        mapspec: "filtered[i] -> samples[i]"
        func:
          _target_: rbyte.io.DataFrameGroupByDynamic
          index_column: meta/ImageMetadata.cam_front_left/frame_idx
          every: 10i
          period: 60i
          closed: left
          gather_every: 10

      - _target_: pipefunc.PipeFunc
        output_name: samples_cast
        mapspec: "samples[i] -> samples_cast[i]"
        func:
          _target_: makefun.create_function
          func_signature: "df_query(*, query, samples)"
          func_impl:
            _target_: rbyte.io.DataFrameDuckDbQuery
        bound:
          query: |
            SELECT
                "meta/ImageMetadata.cam_front_left/time_stamp"::TIMESTAMP[6] AS "meta/ImageMetadata.cam_front_left/time_stamp",
                "meta/ImageMetadata.cam_front_left/frame_idx"::INT32[6] AS "meta/ImageMetadata.cam_front_left/frame_idx",
                "meta/VehicleMotion/speed"::FLOAT[6] AS "meta/VehicleMotion/speed",
                "meta/VehicleMotion/gas_pedal_normalized"::FLOAT[6] AS "meta/VehicleMotion/gas_pedal_normalized",
                "meta/VehicleMotion/brake_pedal_normalized"::FLOAT[6] AS "meta/VehicleMotion/brake_pedal_normalized",
                "meta/VehicleMotion/steering_angle_normalized"::FLOAT[6] AS "meta/VehicleMotion/steering_angle_normalized",
                "meta/VehicleState/turn_signal"::INT8[6] AS "meta/VehicleState/turn_signal",
                "meta/Gnss/xy"::FLOAT[2][6] AS "meta/Gnss/xy",
                "waypoints/xy_normalized"::FLOAT[2][10][6] AS "waypoints/xy_normalized",
                "waypoints/xy"::FLOAT[2][10][6] AS "waypoints/xy",
                "osm/osm/Way/highway"::INT32[6] AS "osm/highway",
            FROM
                samples
            WHERE
                len("meta/ImageMetadata.cam_front_left/frame_idx") = 6
                AND list_last("meta/ImageMetadata.cam_front_left/frame_idx") - list_first("meta/ImageMetadata.cam_front_left/frame_idx") == 50
                AND NOT (
                    list_max("meta/VehicleMotion/gas_pedal_normalized") <= (1.0 / 255 + 0.001)
                    AND list_max("meta/VehicleMotion/brake_pedal_normalized") <= (1.0 / 164 + 0.001)
                    AND list_max("meta/VehicleMotion/speed") >= 25.0
                    AND list_last("meta/VehicleMotion/speed") - list_first("meta/VehicleMotion/speed") >= -0.05 * list_avg("meta/VehicleMotion/speed")
                )

      - _target_: pipefunc.PipeFunc
        renames:
          keys: input_id
          values: samples_cast
        output_name: samples_aggregated
        func:
          _target_: rbyte.io.DataFrameConcater
          key_column: __input_id
