#@yaml/text-templated-strings

#@ drives = [
#@     'Niro096-HQ/2023-01-11--13-47-36',
#@     'Niro101-HQ/2022-12-25--09-58-33',
#@     'Niro101-HQ/2022-12-30--09-23-51',
#@     'Niro101-HQ/2022-12-31--09-57-24',
#@     'Niro101-HQ/2023-01-01--09-31-43',
#@     'Niro115-HQ/2023-05-16--10-47-33',
#@     'Niro104-HQ/2022-12-20--13-57-20',
#@     'Niro107-HQ/2023-05-12--12-05-15',
#@     'Niro122-HQ/2023-04-05--12-06-39',
#@     'Niro102-HQ/2022-12-03--11-30-20',
#@     'G1-00428/2024-04-23--07-00-31',
#@     'Niro104-HQ/2023-04-27--08-23-53',
#@     'G1-00429/2024-04-22--13-35-09',
#@     'G1-00436/2024-04-22--07-48-38',
#@     'G1-00436/2024-04-22--15-59-18'
#@ ]

#@ cameras = [
#@     'cam_front_left',
#@ ]
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
inputs:
  #@ for input_id in drives:
  (@=input_id@):
    sources:
      #@ for source_id in cameras:
      (@=source_id@):
        index_column: "ImageMetadata.(@=source_id@).frame_idx"
        source:
          _target_: rbyte.io.PathTensorSource
          path: "${paths.data_dir}/(@=input_id@)/frames/(@=source_id@).defish.mp4/576x324/{:09d}.jpg"
          decoder:
            _target_: simplejpeg.decode_jpeg
            _partial_: true
            colorspace: rgb
            fastdct: true
            fastupsample: true
      #@ end

    samples:
      pipeline:
        _target_: pipefunc.Pipeline
        validate_type_annotations: false
        cache_type: disk
        cache_kwargs:
          cache_dir: ${paths.rbyte_cache_dir}
        functions:
          - _target_: pipefunc.PipeFunc
            renames:
              path: yaak_metadata_path
              fields: yaak_metadata_fields
            output_name: data
            cache: true
            func:
              _target_: hydra.utils.get_method
              path: rbyte.io.build_yaak_metadata_dataframe

          - _target_: pipefunc.PipeFunc
            renames:
              input: data
            output_name: data_aligned
            func:
              _target_: rbyte.io.DataFrameAligner
              separator: .
              fields:
                ImageMetadata.(@=cameras[0]@):
                  key: time_stamp

                #@ for camera in cameras[1:]:
                ImageMetadata.(@=camera@):
                  key: time_stamp
                  columns:
                    frame_idx:
                      method: asof
                      tolerance: 10ms
                      strategy: nearest
                #@ end

                VehicleState:
                  key: time_stamp
                  columns:
                    turn_signal:
                      method: asof
                      tolerance: 100ms

                VehicleMotion:
                  key: time_stamp
                  columns:
                    speed:
                      method: interp
                    gas_pedal_normalized:
                      method: interp
                    brake_pedal_normalized:
                      method: interp
                    steering_angle_normalized:
                      method: interp
                    gear:
                      method: asof
                      tolerance: 100ms
                      strategy: nearest

          - _target_: pipefunc.PipeFunc
            renames:
              input: data_aligned
            output_name: data_filtered
            func:
              _target_: rbyte.io.DataFrameFilter
              predicate: |
                `VehicleMotion.gear` == '3' 
                and `VehicleMotion.speed` between 0.0 and 130.0 
                and `VehicleMotion.gas_pedal_normalized` between 0.0 and 1.0 
                and `VehicleMotion.brake_pedal_normalized` between 0.0 and 1.0 
                and `VehicleMotion.steering_angle_normalized` between -1.0 and 1.0

          - _target_: pipefunc.PipeFunc
            renames:
              input: data_filtered
            output_name: samples
            func:
              _target_: rbyte.FixedWindowSampleBuilder
              index_column: ImageMetadata.(@=cameras[0]@).frame_idx
              every: 240i
              # period: 230i
              closed: left
              gather_every: 10
              length: 24

          - _target_: pipefunc.PipeFunc
            renames:
              input: samples
            output_name: samples_filtered
            func:
              _target_: rbyte.io.DataFrameFilter
              predicate: |
                not (
                      array_upper(`VehicleMotion.gas_pedal_normalized`) <= (1.0/255 + 0.001)
                  and array_upper(`VehicleMotion.brake_pedal_normalized`) <= (1.0/164 + 0.001)
                  and array_upper(`VehicleMotion.speed`) >= 25.0
                  and array_get(`VehicleMotion.speed`, -1) - array_get(`VehicleMotion.speed`, 1) >= -0.05 * array_mean(`VehicleMotion.speed`)
                )

      kwargs:
        yaak_metadata_path: ${paths.data_dir}/(@=input_id@)/metadata.log
        yaak_metadata_fields:
          rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
            time_stamp:
              _target_: polars.Datetime
              time_unit: ns

            frame_idx:
              _target_: polars.Int32

            camera_name:
              _target_: polars.Enum
              categories:
                - cam_front_center
                - cam_front_left
                - cam_front_right
                - cam_left_forward
                - cam_right_forward
                - cam_left_backward
                - cam_right_backward
                - cam_rear

          rbyte.io.yaak.proto.can_pb2.VehicleState:
            time_stamp:
              _target_: polars.Datetime
              time_unit: ns

            turn_signal:
              _target_: polars.Int8

          rbyte.io.yaak.proto.can_pb2.VehicleMotion:
            time_stamp:
              _target_: polars.Datetime
              time_unit: ns

            speed:
              _target_: polars.Float32

            gas_pedal_normalized:
              _target_: polars.Float32

            brake_pedal_normalized:
              _target_: polars.Float32

            steering_angle_normalized:
              _target_: polars.Float32

            gear:
              _target_: polars.Enum
              categories: ["0", "1", "2", "3"]
  #@ end
