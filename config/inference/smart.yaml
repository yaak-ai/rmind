# @package _global_

defaults:
  - /paths: default
  - /dataset/predict@datamodule.predict.dataset
  - _self_

vars:
  batch_size: 64
  clip_len: 6
  speed_range: [0.0, 130.0]

model:
  _target_: cargpt.models.control_transformer.ControlTransformer.load_from_wandb_artifact
  artifact: ???
  filename: model.ckpt
  hparams_updaters:
    # 1. wrap hparams in DictConfig
    - _target_: omegaconf.DictConfig
      _partial_: true

    # 2. delete unnecesary keys
    - _target_: funcy.del_in
      _partial_: true
      path: ["objective_scheduler"]

    - _target_: funcy.del_in
      _partial_: true
      path: ["objectives", "forward_dynamics"]

    - _target_: funcy.del_in
      _partial_: true
      path: ["objectives", "inverse_dynamics"]

    - _target_: funcy.del_in
      _partial_: true
      path: ["objectives", "random_masked_hindsight_control"]

    - _target_: funcy.del_in
      _partial_: true
      path: ["objectives", "copycat"]

    # 3. merge config
    #  NOTE(galaxy brain alert): hydra instantiation with `_partial_: true` uses
    # `functools.partial`, which binds _leftmost_ positional arguments, which in this
    # case means the original hparams would be merged last, effectively negating any
    # updates. Using `funcy.rpartial` as a workaround.
    # - _target_: funcy.rpartial
    #   _args_:
    #     - _target_: omegaconf.DictConfig.merge_with
    #       _partial_: true

    #     - _target_: omegaconf.DictConfig
    #       _recursive_: false
    #       content:
    #         objectives:
    #           _target_: cargpt.utils.ModuleDict

datamodule:
  _target_: cargpt.datamodules.GenericDataModule
  predict:
    _target_: torch.utils.data.DataLoader
    shuffle: false
    batch_size: ${vars.batch_size}
    num_workers: 32
    pin_memory: false
    persistent_workers: true
    multiprocessing_context: forkserver
    collate_fn:
      _target_: yaak_datasets.collate
      _partial_: true
    dataset:
      config:
        data:
          metadata:
            select:
              - message: ImageMetadata
                fields:
                  - name: frame_idx
                  - name: camera_name

              - message: VehicleMotion
                fields:
                  - name: speed
                    merge:
                      method: interp

                  - name: steering_angle_normalized
                    merge:
                      method: interp

                  - name: gas_pedal_normalized
                    merge:
                      method: interp

                  - name: brake_pedal_normalized
                    merge:
                      method: interp

              - message: VehicleState
                fields:
                  - name: turn_signal

            filter: >
              VehicleMotion_speed between ${vars.speed_range[0]} and ${vars.speed_range[1]}
              and VehicleMotion_gas_pedal_normalized between 0.0 and 1.0
              and VehicleMotion_brake_pedal_normalized between 0.0 and 1.0
              and VehicleMotion_steering_angle_normalized between -1.0 and 1.0

        samples:
          clips:
            length: ${vars.clip_len}
            stride: 10
            step: 10 # NOTE

          transforms:
            - _target_: yaak_datasets.transforms.Crop
              offsets: [2, 2, 0, 0]

            - _target_: yaak_datasets.transforms.Normalize
              # ImageNet stats
              mean: [0.485, 0.456, 0.406]
              std: [0.229, 0.224, 0.225]

trainer:
  _target_: pytorch_lightning.Trainer
  accelerator: gpu
  devices: 1
  benchmark: true
  logger: false

  callbacks:
    - _target_: cargpt.callbacks.model_summary.ModelSummary
      depth: 5

    # - _target_: cargpt.callbacks.rerun.RerunPredictionWriter
    #   write_interval: batch
    #   application_id: ${model.artifact}
